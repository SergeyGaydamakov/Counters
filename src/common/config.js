const dotenv = require('dotenv');
dotenv.config();

/**
 * –ë–µ–∑–æ–ø–∞—Å–Ω—ã–π –ø–∞—Ä—Å–∏–Ω–≥ JSON –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è
 * @param {string} envVar - –∑–Ω–∞—á–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è
 * @param {*} defaultValue - –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
 * @param {string} varName - –∏–º—è –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –æ—à–∏–±–æ–∫
 * @returns {*} - —Ä–∞—Å–ø–∞—Ä—Å–µ–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∏–ª–∏ –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
 */
function safeJsonParse(envVar, defaultValue, varName) {
    if (!envVar) {
        return defaultValue;
    }
    
    try {
        return JSON.parse(envVar.trim());
    } catch (error) {
        console.error(`–û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON –¥–ª—è –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π ${varName}:`, error.message);
        console.error(`–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: ${envVar}`);
        console.error(`–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é:`, defaultValue);
        
        // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –¥–ª—è —Ç–∏–ø–∏—á–Ω—ã—Ö –æ—à–∏–±–æ–∫ JSON
        if (error.message.includes('Expected property name')) {
            console.error(`üí° –ü–æ–¥—Å–∫–∞–∑–∫–∞: –í JSON –≤—Å–µ –∫–ª—é—á–∏ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –≤ –∫–∞–≤—ã—á–∫–∞—Ö.`);
            console.error(`   –ü—Ä–∏–º–µ—Ä: {"key": "value"} –≤–º–µ—Å—Ç–æ {key: "value"}`);
        }
        
        return defaultValue;
    }
}

/**
 * –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Web —Å–µ—Ä–≤–∏—Å–∞
 */
const config = {
    //
    isDevelopment: process.env.NODE_ENV === "development",
    // –ü–æ—Ä—Ç —Å–µ—Ä–≤–µ—Ä–∞
    port: parseInt(process.env.WEB_PORT) || 3000,
    
    // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–æ—Ä–∫–µ—Ä–æ–≤ –≤ –∫–ª–∞—Å—Ç–µ—Ä–µ
    workers: parseInt(process.env.CLUSTER_WORKERS) || require('os').cpus().length,
    
    // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Ñ–∞–∫—Ç–æ–≤
    facts: {
        fieldConfigPath: process.env.MESSAGE_CONFIG_PATH || null,
        indexConfigPath: process.env.INDEX_CONFIG_PATH || null,
        counterConfigPath: process.env.COUNTER_CONFIG_PATH || null,
        targetSize: parseInt(process.env.FACT_TARGET_SIZE) || 500,
        includeFactDataToIndex: process.env.INCLUDE_FACT_DATA_TO_INDEX === 'true',
        lookupFacts: process.env.LOOKUP_FACTS === 'true',
        indexBulkUpdate: process.env.INDEX_BULK_UPDATE === 'true',
        maxDepthLimit: parseInt(process.env.MAX_DEPTH_LIMIT) || 500,
        maxCountersProcessing: parseInt(process.env.MAX_COUNTERS_PROCESSING) || 0,
        maxCountersPerRequest: parseInt(process.env.MAX_COUNTERS_PER_REQUEST) || 0,
        allowedCountersNames: process.env.ALLOWED_COUNTERS_NAMES ? process.env.ALLOWED_COUNTERS_NAMES.split(',').map(t => t.trim()).filter(t => t !== '') : null,
    },
    
    // CORS –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    cors: {
        origin: process.env.CORS_ORIGIN || '*',
        methods: ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS'],
        allowedHeaders: ['Content-Type', 'Authorization', 'X-Requested-With']
    },
    
    // Rate limiting
    rateLimit: {
        windowMs: parseInt(process.env.RATE_LIMIT_WINDOW_MS) || 15 * 60 * 1000, // 15 –º–∏–Ω—É—Ç
        max: parseInt(process.env.RATE_LIMIT_MAX) || 1000, // –º–∞–∫—Å–∏–º—É–º –∑–∞–ø—Ä–æ—Å–æ–≤ –∑–∞ –æ–∫–Ω–æ
        message: {
            error: '–°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–æ–≤ —Å —ç—Ç–æ–≥–æ IP, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ',
            retryAfter: '15 –º–∏–Ω—É—Ç'
        }
    },
    
    // –õ–∏–º–∏—Ç—ã –∑–∞–ø—Ä–æ—Å–æ–≤
    limits: {
        json: process.env.JSON_LIMIT || '10mb',
        urlencoded: process.env.URL_LIMIT || '10mb'
    },
    
    // –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
    logging: {
        enableRequestLogging: process.env.ENABLE_REQUEST_LOGGING !== 'false',
        saveFrequency: parseInt(process.env.LOG_SAVE_FREQUENCY) || 100,
        debugMode: process.env.DEBUG_MODE === 'true',
        logLevel: process.env.LOG_LEVEL || 'INFO',
        writeErrorsToFile: process.env.WRITE_ERRORS_TO_FILE === 'true'
    },
    
    // –°—Ç—Ä–æ–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ MongoDB
    database: {
        connectionString: process.env.MONGODB_CONNECTION_STRING || 'mongodb://localhost:27017',
        databaseName: process.env.MONGODB_DATABASE_NAME || 'counters',
        options: {
            individualProcessClient: process.env.INDIVIDUAL_PROCESS_CLIENT === 'true' || false,
            individualCollectionObject: process.env.INDIVIDUAL_COLLECTION_OBJECT === 'true' || false,
            disableSave: process.env.DISABLE_SAVE === 'true' || false,
            writeConcern: safeJsonParse(process.env.MONGODB_WRITE_CONCERN, { w: 1, j: false, wtimeout: 5000 }, 'MONGODB_WRITE_CONCERN'),
            readConcern: safeJsonParse(process.env.MONGODB_READ_CONCERN, { level: "local" }, 'MONGODB_READ_CONCERN'),
            aggregateReadPreference: safeJsonParse(process.env.MONGODB_AGGREGATE_READ_PREFERENCE, { "mode": "secondaryPreferred" }, 'MONGODB_AGGREGATE_READ_PREFERENCE'),
            minPoolSize: parseInt(process.env.MONGODB_MIN_POOL_SIZE) || 10,
            maxPoolSize: parseInt(process.env.MONGODB_MAX_POOL_SIZE) || 100,
            maxConnecting: parseInt(process.env.MONGODB_MAX_CONNECTING) || 10,
        },
        batchSize: parseInt(process.env.MONGODB_BATCH_SIZE) || 5000,
    },
    
    // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è —Ç–∏–ø–æ–≤ —Å–æ–æ–±—â–µ–Ω–∏–π
    messageTypes: {
        // –°–ø–∏—Å–æ–∫ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö —Ç–∏–ø–æ–≤ —Å–æ–æ–±—â–µ–Ω–∏–π (—á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é)
        // –ï—Å–ª–∏ –Ω–µ –∑–∞–¥–∞–Ω, –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è –≤—Å–µ —Ç–∏–ø—ã
        allowedTypes: process.env.ALLOWED_MESSAGE_TYPES ? 
            (() => {
                const types = process.env.ALLOWED_MESSAGE_TYPES.split(',').map(t => parseInt(t.trim())).filter(t => !isNaN(t));
                return types.length > 0 ? types : null;
            })() : 
            null,
        
        // –ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç —É–º–µ–Ω—å—à–µ–Ω–∏—è —Ç—Ä–∞—Ñ–∏–∫–∞ IRIS –∑–∞–ø—Ä–æ—Å–æ–≤ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 1 - –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –≤—Å–µ)
        irisTrafficReductionFactor: parseInt(process.env.IRIS_TRAFFIC_REDUCTION_FACTOR) || 1
    },
};

module.exports = config;
